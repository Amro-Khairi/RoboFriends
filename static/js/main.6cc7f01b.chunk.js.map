{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Searchbox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robotsProps","CardsArray","map","user","i","username","Searchbox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","robotsState","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDom","render","StrictMode","document","getElementById"],"mappings":"oSAiBeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,OAAf,eACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA+CC,IAAI,UAD/D,IAEI,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCiBXC,EAvBE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACTC,EAAaD,EAAYE,KAAI,SAACC,EAAMC,GAKtC,OACI,cAAC,EAAD,CAEAT,GAAIK,EAAYI,GAAGT,GACnBE,KAAMG,EAAYI,GAAGP,KACrBC,MAAOE,EAAYI,GAAGN,MACtBO,SAAUL,EAAYI,GAAGC,UAJpBL,EAAYI,GAAGT,OAQ5B,OACI,8BACKM,KCNEK,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKd,UAAU,MAAf,SACI,uBACAA,UAAU,uCACVe,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCARI,G,MARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKtB,EAAMuB,aCiBJC,E,kDAnBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,qDAOd,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAK7B,MAAMuB,a,GAhBCQ,IAAMC,WCoElBC,E,kDAnDX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GAGd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAT1C,EAAKb,MAAQ,CACTc,YAAa,GACbH,YAAa,IAJP,E,qDAiBd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKd,SAAS,CAAES,YAAaK,S,oBAIzC,WAAU,IAAD,OACCC,EAAiBhB,KAAKJ,MAAMc,YAAYO,QAAO,SAAAC,GACjD,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKxB,MAAMW,YAAYY,kBAEpE,OAAsC,IAAlCnB,KAAKJ,MAAMc,YAAYW,OAChB,oBAAI9B,MAAO,CAAC+B,UAAW,UAAvB,qBAGH,sBAAKlD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWc,aAAcc,KAAKK,iBAFlC,IAGI,cAAC,EAAD,UACI,eAAC,EAAD,WAGI,cAAC,EAAD,CAAU1B,YAAcqC,IAH5B,gB,GAxCNd,IAAMC,WCNToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCyBdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.6cc7f01b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card'>  {/*className=\"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5 \"*/}\r\n            <img src={`https://robohash.org/${props.id}?200x200`}  alt='robot' /> {/* This site works by adding its URL then add any word to it then ? widthxheight */}\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n                {/* <h4>{props.id}</h4> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n//Destructuring\r\n//Ex 1\r\n// import React from 'react';\r\n\r\n// const Card = (props) => {\r\n//     const { name, id, email} = props;\r\n//     return (\r\n//         <div className='card'>  {/*className=\"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5 \"*/}\r\n//             <img src={'https://robohash.org/${id}?200x200'}  alt='robot' /> {/* This site works by adding its URL then add any word to it then ? widthxheight */}\r\n//             <div>\r\n//                 <h2>{name}</h2>\r\n//                 <p>{email}</p>\r\n//                 <h4>{id}</h4>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Card;\r\n\r\n\r\n//Destructuring \r\n//Ex 2\r\n// import React from 'react';\r\n\r\n// const Card = ({name, email, id}) => {\r\n//     return (\r\n//         <div className='card'>  {/*className=\"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5 \"*/}\r\n//             <img src={'https://robohash.org/${id}?200x200'}  alt='robot' /> {/* This site works by adding its URL then add any word to it then ? widthxheight */}\r\n//             <div>\r\n//                 <h2>{name}</h2>\r\n//                 <p>{email}</p>\r\n//                 <h4>{id}</h4>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Card;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\n\r\nconst CardList = ({robotsProps}) => { \r\n    const CardsArray = robotsProps.map((user, i) => {\r\n        //to create an error so we can test ErrorBoundery\r\n        // if (true) {\r\n        //     throw new Error('NOOOOO!')\r\n        // }\r\n        return (\r\n            <Card \r\n            key={robotsProps[i].id} \r\n            id={robotsProps[i].id} \r\n            name={robotsProps[i].name} \r\n            email={robotsProps[i].email} \r\n            username={robotsProps[i].username}\r\n            />\r\n        );\r\n    })   /* Key props is added to React elements that will be repeated several times to let it know which one is which, so give it a unique value */\r\n    return (\r\n        <div>\r\n            {CardsArray}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n\r\n","//This is called a pure functions, so function components\r\nimport React from 'react';\r\n\r\nconst Searchbox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba br4 b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange= {searchChange} //This is just and HTML attribue, so now it will activate the function the moment I make a change\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) { //This lifecycle method works if there's an error and it takes two parameters\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. An error occured!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","//This is called Smart Component because they have \"state\", and smart components usually have class.\r\nimport React from 'react';\r\nimport CardList from '../Components/CardList.js';\r\nimport Searchbox from '../Components/Searchbox.js';\r\n// import { robots } from './robots';\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll.js';\r\nimport ErrorBoundry from '../Components/ErrorBoundry.js';\r\n\r\n//We want the children(CardList, SearchBox) to communicate with each other, so we use STATE, go read bottom\r\n\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield: ''\r\n// }\r\n\r\n//In order to use state, We must change the App into object again\r\n//So we use class App extends ... instead of const App ...\r\nclass App extends React.Component {\r\n    constructor() {  //to add state, we have to use constructor\r\n        super()\r\n        this.state = {\r\n            robotsState: [],\r\n            searchfield: ''        \r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => { //here we create a function named anything, now I want to link this function to SearchBox, so that everytime I do an event to SearchBox, it comes as parameter\r\n        //console.log(event.target.value);  //It's just a known memorised way, we add .target.value to get the value of the event \r\n        //I want to update the value in searchfiled so \r\n        this.setState({ searchfield: event.target.value })\r\n    } \r\n\r\n    //A ROLE, When using pre-built  functions like render and constructor, you don't need =>, BUT in our created function, we must use it to make sure that 'this' refers to the parent and not the event\r\n    //So we changed it from onSearchChange (event) {} to what you see\r\n\r\n    componentDidMount() { //Read about react lifecyle methods\r\n        fetch('https://jsonplaceholder.typicode.com/users') //render runs after constructor and renders a [] so empty page, then runs again after this function to render from URL\r\n            .then(Response=> {\r\n                return Response.json();\r\n            })\r\n            .then(users => {\r\n                this.setState({ robotsState: users })\r\n            }) \r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robotsState.filter(robot => { //filter is just a method or a function I have just created with any name but I added inside of its () so it works\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()) //This means \"return the robot.name after you lowercase it that includes the inside of searchFiled after you lowercase it\"\r\n        })\r\n        if (this.state.robotsState.length === 0) {\r\n            return <h1 style={{textAlign: 'center'}}>Loading</h1>\r\n        } else {\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robo Friends</h1>\r\n                    <Searchbox searchChange={this.onSearchChange}/> {/* So here we link it, then we go to SearchBox.js */}\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            {/* <CardList robotsProps= {robots}/> Now CardList receives a props robots and it's an Array. so we added the {} . AND it receives it directly*/}\r\n                            {/* <CardList robotsProps= {this.state.robotsState} /> {/* I want it to receive the robots from parent'state, not directly from file */}\r\n                            <CardList robotsProps= {filteredRobots} /> {/* This now became children */}\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default App;\r\n\r\n\r\n//Props we can pass them down to children, \r\n//STATE an object that describes our application\r\n//Props are simply things that come out of STATE\r\n//So basically, a parent sends the STATE to a child, and the child receives them as Props\r\n//State should live in the parent, so we added it to App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom'; //we get this to be used on websites\r\n// import './index.css';\r\n// import Card from './Card.js';\r\n// import {robots} from './robots.js' //Here we add {} because it has no \"default\" in export, if I hvae another variable called cat, then it will be {robots, cat}\r\n// import reportWebVitals from './reportWebVitals';\r\n// import 'tachyons';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Card id={robots[0].id} name={robots[0].name} email={robots[0].email} username={robots[0].username}/>\r\n//     <Card id={robots[1].id} name={robots[1].name} email={robots[1].email} username={robots[1].username}/>\r\n//     <Card id={robots[2].id} name={robots[2].name} email={robots[2].email} username={robots[2].username}/>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n\r\n//Now to loop in cards and use several ones, we will put all of them in a parent called \"CardList\"\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './Containers/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}